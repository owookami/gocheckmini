import 'dart:io';\nimport 'package:sqflite_common_ffi/sqflite_ffi.dart';\nimport 'package:path/path.dart';\n\nvoid main() async {\n  sqfliteFfiInit();\n  databaseFactory = databaseFactoryFfi;\n\n  try {\n    print('🔨 bjdongs 테이블 생성 시작...');\n\n    final databasesPath = await getDatabasesPath();\n    final dbPath = join(databasesPath, 'parking_finder.db');\n    \n    final db = await openDatabase(dbPath);\n    \n    // bjdongs 테이블 생성\n    await db.execute('''\n      CREATE TABLE IF NOT EXISTS bjdongs (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        sigungu_code TEXT NOT NULL,\n        bjdong_name TEXT NOT NULL,\n        is_active INTEGER DEFAULT 1,\n        created_at TEXT NOT NULL,\n        updated_at TEXT NOT NULL\n      )\n    ''');\n    \n    await db.execute(\n      'CREATE INDEX IF NOT EXISTS idx_bjdongs_sigungu_code ON bjdongs(sigungu_code);',\n    );\n    \n    print('✅ bjdongs 테이블 생성 완료');\n    \n    // 기존 데이터 삭제\n    await db.delete('bjdongs');\n    \n    // 기본 읍면동 데이터 삽입\n    await db.transaction((txn) async {\n      final regions = await txn.query(\n        'regions',\n        where: 'sigungu_code IS NOT NULL AND sigungu_code != \"\"',\n      );\n      \n      int bjdongId = 1;\n      \n      for (final region in regions) {\n        final sigunguCode = region['sigungu_code'] as String;\n        final sigunguName = region['sigungu_name'] as String;\n        \n        List<String> bjdongs = [];\n        \n        if (sigunguName.contains('종로구')) {\n          bjdongs = ['청운효자동', '사직동', '삼청동', '부암동', '종로1·2·3·4가동'];\n        } else if (sigunguName.contains('중구')) {\n          bjdongs = ['소공동', '회현동', '명동', '필동', '장충동'];\n        } else if (sigunguName.contains('용산구')) {\n          bjdongs = ['용산2가동', '남영동', '청파동', '원효로1동', '효창동'];\n        } else {\n          bjdongs = ['${sigunguName} 중심가', '${sigunguName} 1동', '${sigunguName} 2동'];\n        }\n        \n        for (final bjdong in bjdongs) {\n          await txn.insert('bjdongs', {\n            'id': bjdongId++,\n            'sigungu_code': sigunguCode,\n            'bjdong_name': bjdong,\n            'is_active': 1,\n            'created_at': DateTime.now().toIso8601String(),\n            'updated_at': DateTime.now().toIso8601String(),\n          });\n        }\n      }\n    });\n    \n    final totalResult = await db.rawQuery('SELECT COUNT(*) as count FROM bjdongs');\n    final totalCount = totalResult.first['count'] as int;\n    print('✅ bjdongs 데이터 생성 완료: $totalCount개');\n    \n    await db.close();\n    print('\\n✅ bjdongs 테이블 생성 및 데이터 삽입 완료!');\n    \n  } catch (e) {\n    print('❌ 오류 발생: $e');\n  }\n} 